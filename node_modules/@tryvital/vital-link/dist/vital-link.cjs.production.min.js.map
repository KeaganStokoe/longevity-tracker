{"version":3,"file":"vital-link.cjs.production.min.js","sources":["../src/factory.ts","../src/useVitalLink.tsx","../src/VitalLink.tsx"],"sourcesContent":["import { VitalLinkOptions, Vital } from './types';\n\nexport interface VitalFactory {\n  open: Function;\n  exit: Function;\n  destroy: Function;\n}\n\ninterface FactoryInternalState {\n  vital: Vital | null;\n  open: boolean;\n  onExitCallback: Function | null;\n}\n\nconst renameKeyInObject = (\n  o: { [index: string]: any },\n  oldKey: string,\n  newKey: string\n): object => {\n  const newObject = {};\n  delete Object.assign(newObject, o, { [newKey]: o[oldKey] })[oldKey];\n  return newObject;\n};\n\n/**\n * Wrap link handler creation and instance to clean up iframe via destroy() method\n */\nexport const createVital = (options: VitalLinkOptions) => {\n  const state: FactoryInternalState = {\n    vital: null,\n    open: false,\n    onExitCallback: null,\n  };\n\n  // If Vital is not available, throw an Error\n  if (typeof window === 'undefined' || !window.Vital) {\n    throw new Error('Vital not loaded');\n  }\n\n  const config = renameKeyInObject(\n    options,\n    'publicKey',\n    'key'\n  ) as VitalLinkOptions;\n\n  state.vital = window.Vital.create({\n    ...config,\n    onExit: (...params: any) => {\n      state.open = false;\n      config.onExit && config.onExit(...params);\n      state.onExitCallback && state.onExitCallback();\n    },\n  });\n\n  const open = (token: string) => {\n    if (!state.vital) {\n      return;\n    }\n    state.open = true;\n    state.onExitCallback = null;\n    state.vital.open(token);\n  };\n\n  const exit = (exitOptions: any, callback: Function) => {\n    if (!state.open || !state.vital) {\n      callback && callback();\n      return;\n    }\n    state.onExitCallback = callback;\n    state.vital.exit(exitOptions);\n    if (exitOptions && exitOptions.force) {\n      state.open = false;\n    }\n  };\n\n  const destroy = () => {\n    if (!state.vital) {\n      return;\n    }\n\n    state.vital.destroy();\n    state.vital = null;\n  };\n\n  return {\n    open,\n    exit,\n    destroy,\n  };\n};\n","import { useEffect, useState } from 'react';\nimport useScript from 'react-script-hook';\nimport { VitalLinkOptions } from './types';\nimport { createVital, VitalFactory } from './factory';\n\nconst noop = () => {};\n\nconst VITAL_LINK_STABLE_URL = 'https://link.tryvital.io/initialize.js';\n\n/**\n * This hook loads Vital script and manages the Vital Link creation for you.\n * You get easy open & exit methods to call and loading & error states.\n *\n * This will destroy the Vital UI on un-mounting so it's up to you to be\n * graceful to the user.\n *\n * A new Vital instance is created every time the token and products options change.\n * It's up to you to prevent unnecessary re-creations on re-render.\n */\nexport const useVitalLink = (options: VitalLinkOptions) => {\n  // Asynchronously load the vital/link/stable url into the DOM\n  const [loading, error] = useScript({\n    src: VITAL_LINK_STABLE_URL,\n    checkForExisting: true,\n  });\n\n  // internal state\n  const [vital, setVital] = useState<VitalFactory | null>(null);\n  const [iframeLoaded, setIframeLoaded] = useState(false);\n\n  useEffect(() => {\n    // If the link.js script is still loading, return prematurely\n    if (loading) {\n      return;\n    }\n\n    if (error || !window.Vital) {\n      // eslint-disable-next-line no-console\n      console.error('Error loading Vital', error);\n      return;\n    }\n\n    // if an old vital instance exists, destroy it before\n    // creating a new one\n    if (vital != null) {\n      vital.exit({ force: true }, () => vital.destroy());\n    }\n\n    const next = createVital({\n      ...options,\n      onLoad: () => {\n        setIframeLoaded(true);\n        options.onLoad && options.onLoad();\n      },\n    });\n\n    setVital(next);\n\n    // destroy the Vital iframe factory\n    return () => next.exit({ force: true }, () => next.destroy());\n  }, [loading, error]);\n\n  return {\n    error,\n    ready: vital != null && (!loading || iframeLoaded),\n    exit: vital ? vital.exit : noop,\n    open: vital ? vital.open : noop,\n  };\n};\n","import React from 'react';\n\nimport { VitalLinkPropTypes } from './types';\nimport { useVitalLink } from './useVitalLink';\n\nexport const VitalLink: React.FC<VitalLinkPropTypes> = props => {\n  const { children, style, className, ...config } = props;\n  const { error, open } = useVitalLink({ ...config });\n\n  return (\n    <button\n      disabled={Boolean(error)}\n      type=\"button\"\n      className={className}\n      style={{\n        padding: '6px 4px',\n        outline: 'none',\n        background: '#FFFFFF',\n        border: '2px solid #F1F1F1',\n        borderRadius: '4px',\n        ...style,\n      }}\n      onClick={() => open()}\n    >\n      {children}\n    </button>\n  );\n};\n\nVitalLink.displayName = 'VitalLink';\n"],"names":["noop","useVitalLink","options","useScript","src","checkForExisting","loading","error","useState","vital","setVital","iframeLoaded","setIframeLoaded","useEffect","window","Vital","exit","force","destroy","next","state","open","onExitCallback","Error","o","newObject","config","Object","assign","create","onExit","token","exitOptions","callback","createVital","onLoad","console","ready","VitalLink","props","children","style","className","React","disabled","Boolean","type","padding","outline","background","border","borderRadius","onClick","displayName"],"mappings":"yZAcA,ICTMA,EAAO,aAcAC,EAAe,SAACC,SAEFC,EAAU,CACjCC,IAf0B,yCAgB1BC,kBAAkB,IAFbC,OAASC,SAMUC,WAA8B,MAAjDC,OAAOC,SAC0BF,YAAS,GAA1CG,OAAcC,cAErBC,aAAU,eAEJP,OAIAC,GAAUO,OAAOC,OAQR,MAATN,GACFA,EAAMO,KAAK,CAAEC,OAAO,IAAQ,kBAAMR,EAAMS,iBAGpCC,EDrBiB,SAACjB,OACpBkB,EAA8B,CAClCX,MAAO,KACPY,MAAM,EACNC,eAAgB,SAII,oBAAXR,SAA2BA,OAAOC,YACrC,IAAIQ,MAAM,wBArBlBC,IAIMC,EAoBAC,GAxBNF,EAyBEtB,EArBIuB,EAAY,UACXE,OAAOC,OAAOH,EAAWD,UAAzB,IAAwCA,EAAC,cAAzC,UACAC,UAwBPL,EAAMX,MAAQK,OAAOC,MAAMc,YACtBH,GACHI,OAAQ,WACNV,EAAMC,MAAO,EACbK,EAAOI,QAAUJ,EAAOI,aAAPJ,aACjBN,EAAME,gBAAkBF,EAAME,qBAkC3B,CACLD,KA/BW,SAACU,GACPX,EAAMX,QAGXW,EAAMC,MAAO,EACbD,EAAME,eAAiB,KACvBF,EAAMX,MAAMY,KAAKU,KA0BjBf,KAvBW,SAACgB,EAAkBC,GACzBb,EAAMC,MAASD,EAAMX,OAI1BW,EAAME,eAAiBW,EACvBb,EAAMX,MAAMO,KAAKgB,GACbA,GAAeA,EAAYf,QAC7BG,EAAMC,MAAO,IANbY,GAAYA,KAsBdf,QAZc,WACTE,EAAMX,QAIXW,EAAMX,MAAMS,UACZE,EAAMX,MAAQ,QCjCDyB,MACRhC,GACHiC,OAAQ,WACNvB,GAAgB,GAChBV,EAAQiC,QAAUjC,EAAQiC,oBAI9BzB,EAASS,GAGF,kBAAMA,EAAKH,KAAK,CAAEC,OAAO,IAAQ,kBAAME,EAAKD,cArBjDkB,QAAQ7B,MAAM,sBAAuBA,MAsBtC,CAACD,EAASC,IAEN,CACLA,MAAAA,EACA8B,MAAgB,MAAT5B,KAAmBH,GAAWK,GACrCK,KAAMP,EAAQA,EAAMO,KAAOhB,EAC3BqB,KAAMZ,EAAQA,EAAMY,KAAOrB,IC7DlBsC,EAA0C,SAAAC,OAC7CC,EAA0CD,EAA1CC,SAAUC,EAAgCF,EAAhCE,MAAOC,EAAyBH,EAAzBG,UAAchB,qIAAWa,sCAC1BtC,OAAkByB,IAA3BL,IAAAA,YAGbsB,0BACEC,SAAUC,UAJNtC,OAKJuC,KAAK,SACLJ,UAAWA,EACXD,SACEM,QAAS,UACTC,QAAS,OACTC,WAAY,UACZC,OAAQ,oBACRC,aAAc,OACXV,GAELW,QAAS,kBAAM/B,MAEdmB,IAKPF,EAAUe,YAAc"}